(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{215:function(t,e,s){"use strict";s.r(e);var n=s(6),o=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"node的文件操作能力fs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node的文件操作能力fs"}},[t._v("#")]),t._v(" node的文件操作能力fs")]),t._v(" "),s("blockquote",[s("p",[t._v("在Node里面有很多核心的能力，但最原始最基础最通用的能力，其实就是文件系统交互能力 - fs，以及网络请求的处理能力 - http，正是这两块能力彻底打破了前后端的边界。从前用 JS 是没办法操纵磁盘文件的，通过 JS 也没办法处理网络请求与返回，现在有了 Node 这个混搭各种底层的运行框架，搬砖就变得可能了。")])]),t._v(" "),s("p",[t._v("fs中的方法大多都分同步和异步，那什么时候该用同步什么时候该用异步呢？建议：\n• 对于一次性加载进来，不会二次加载的，比如项目启动之初，或者过程中只读取一次配置文件的，可以用 Sync/同步的方法\n• 对于体积较大的，可能需要多次读写的，有可能影响到业务流程的响应速度的，改用异步的方式做")]),t._v(" "),s("p",[t._v("很多实际的fs的方法，可以不用记住，在使用的时候逐个去查就知道怎么使用了。")])])}),[],!1,null,null,null);e.default=o.exports}}]);